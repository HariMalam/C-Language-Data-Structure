// ***************************************************************************************************************************************************** //

// <------------------------------------------------------------| Start: Recall Functions |-------------------------------------------------------------> //

// Recall Traversal Function
void Recall_Traversal()
{
    printf("\n\nYou Want To Traversal Again ? \n1.Yes \n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Traversal();
        break;
    case 2:
        Array();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Traversal();
        break;
    }
}

// Recall Insersion Function
void Recall_Insersion()
{
    printf("\n\nYou Want To Insersion Again ? \n1.Yes \n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Insersion();
        break;
    case 2:
        Array();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Insersion();
        break;
    }
}

// Recall Deletion Function
void Recall_Deletion()
{
    printf("\n\nYou Want To Deletion Again ? \n1.Yes \n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Deletion();
        break;
    case 2:
        Array();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Deletion();
        break;
    }
}

// Recall Linear Search Funciton
void Recall_Linear_Search()
{
    printf("\n\nYou Want To Linear Search Again ? \n1.Yes \n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Linear_Search();
        break;
    case 2:
        Array();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Linear_Search();
        break;
    }
}

// Recall Binary Search Funciton
void Recall_Binary_Search()
{
    printf("\nYour Want To Binary Search Again ? \n1.Yes \n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Binary_Search();
        break;
    case 2:
        Array();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Binary_Search();
        break;
    }
}

// Recall Sort Funciton
void Recall_Sort_Array()
{
    printf("\nYour Want To Sort Array Again ? \n1.Yes \n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Sort_Array();
        break;
    case 2:
        Array();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Sort_Array();
        break;
    }
}

// Recall Push Function
void Recall_Push()
{
    printf("\nYour Want To Push Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Push();
        break;
    case 2:
        Stack();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Push();
        break;
    }
}

// Recall Pop Function
void Recall_Pop()
{
    printf("\n\nYour Want To Pop Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Pop();
        break;
    case 2:
        Stack();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Pop();
        break;
    }
}

// Recall Peep Function
void Recall_Peep()
{
    printf("\n\nYour Want To Peep Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Peep();
        break;
    case 2:
        Stack();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Peep();
        break;
    }
}

// Recall Peek Function
void Recall_Peek()
{
    printf("\nYour Want To Peek Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Peek();
        break;
    case 2:
        Stack();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Peek();
        break;
    }
}

// Recall Enqueue Function
void Recall_Enqueue()
{
    printf("\n\nYour Want To Enqueue Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Enqueue();
        break;
    case 2:
        Simple_Queue();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Enqueue();
        break;
    }
}

// Recall Dequeue Function
void Recall_Dequeue()
{
    printf("\n\nYour Want To Dequeue Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Dequeue();
        break;
    case 2:
        Simple_Queue();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Dequeue();
        break;
    }
}

// Recall Search in Queue Function
void Recall_Search_Queue()
{
    printf("\n\nYour Want To Search Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        Dequeue();
        break;
    case 2:
        Simple_Queue();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_Dequeue();
        break;
    }
}

// Recall Circular Enqueue Funtion
void Recall_CIR_Enqueue()
{
    printf("\n\nYour Want To Circular Enqueue Queue Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        CIR_Enqueue();
        break;
    case 2:
        Circular_Queue();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_CIR_Enqueue();
        break;
    }
}

// Recall Circular Dequeue Funtion
void Recall_CIR_Dequeue()
{
    printf("\n\nYour Want To Circular Dequeue Queue Again ? \n1.Yes\n2.Back\n3.Main\n0.Close\n");
    scanf("%d", &a);
    switch (a)
    {
    case 1:
        CIR_Dequeue();
        break;
    case 2:
        Circular_Queue();
        break;
    case 3:
        main();
        break;
    case 0:
        break;
    default:
        printf("\nPlease Select Valid Option !");
        Recall_CIR_Dequeue();
        break;
    }
}

// <-------------------------------------------------------------| End: Recall Functions |-------------------------------------------------------------> //

// ***************************************************************************************************************************************************** //